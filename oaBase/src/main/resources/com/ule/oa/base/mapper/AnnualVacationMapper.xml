<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ule.oa.base.mapper.AnnualVacationMapper" >

  <resultMap id="BaseResultMap" type="com.ule.oa.base.po.AnnualVacation" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="ANNUAL_DATE" property="annualDate" jdbcType="TIMESTAMP" />
    <result column="YEAR" property="year" jdbcType="VARCHAR" />
    <result column="TYPE" property="type" jdbcType="BIGINT" />
    <result column="DATE_TYPE" property="dateType" jdbcType="BIGINT" />
    <result column="SUBJECT" property="subject" jdbcType="VARCHAR" />
    <result column="CONTENT" property="content" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="del_flag" property="delFlag" jdbcType="INTEGER" />
    <result column="VERSION" property="version" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, ANNUAL_DATE,YEAR, TYPE, DATE_TYPE, SUBJECT,CONTENT,create_time, create_user, update_time, update_user,del_flag,VERSION
  </sql>
  
  <select id="getListByCondition" resultMap="BaseResultMap" parameterType="com.ule.oa.base.po.AnnualVacation">
    select <include refid="Base_Column_List" /> from base_annual_vacation
    where del_flag = 0
     <if test="annualDate != null">
    	and ANNUAL_DATE = #{annualDate,jdbcType=DATE}
     </if>	
     <if test="startDate != null">
    	and ANNUAL_DATE &gt;= #{startDate,jdbcType=DATE}
     </if>	
     <if test="endDate != null">
    	and ANNUAL_DATE &lt;=#{endDate,jdbcType=DATE}
     </if>
     <if test="year != null">
  		and DATE_FORMAT(ANNUAL_DATE,'%Y') = #{year,jdbcType=BIGINT}
  	</if>
  	<if test="subject != null">
  		and SUBJECT = #{subject,jdbcType=VARCHAR}
  	</if>
  	<if test="type != null">
  		and type = #{type,jdbcType=BIGINT}
  	</if>
  	<if test="typeList != null and typeList.size > 0">
  			and type in
  			<foreach collection="typeList" item="type" open="(" separator="," close=")">
  				#{type,jdbcType=BIGINT}
  			</foreach>
  	</if>
  	ORDER BY annual_date ASC
  </select>
  
  <select id="getListByPage" resultMap="BaseResultMap" parameterType="com.ule.oa.base.po.AnnualVacation">
    select <include refid="Base_Column_List" /> from base_annual_vacation 
     where del_flag = 0
  	 ORDER BY annual_date DESC limit #{offset},#{limit}
  </select>
  
  <select id="getCount" resultType="Integer" parameterType="com.ule.oa.base.po.AnnualVacation">
    select count(1) from base_annual_vacation where del_flag = 0
  </select>
  
  <select id="getList" resultMap="BaseResultMap" parameterType="com.ule.oa.base.po.AnnualVacation">
	select
	<include refid="Base_Column_List" />
	from base_annual_vacation
	where del_flag = 0
  </select>
  <select id="getVacationByDate" resultMap="BaseResultMap">
  	select
	<include refid="Base_Column_List" />
	from base_annual_vacation
	where del_flag = 0
	and ANNUAL_DATE = #{annualDate}
	limit 1;
  </select>
  <insert id="save" parameterType="com.ule.oa.base.po.AnnualVacation" useGeneratedKeys="true" keyProperty="id">
	    insert into base_annual_vacation (
	      ANNUAL_DATE,
	      YEAR,
	      TYPE,
	      DATE_TYPE,
	      SUBJECT,
	      CONTENT,
	      DEL_FLAG,
	      create_time,
	      create_user,
	      VERSION
	      )
	    values (
	      #{annualDate},
	      #{year},
	      #{type}, 
	      #{dateType}, 
	      #{subject}, 
	      #{content}, 
	      #{delFlag},
	      #{createTime},
	      #{createUser},
	      #{version}
	      )
  </insert>
  
  <update id="updateById" parameterType="com.ule.oa.base.po.AnnualVacation" >
	    update base_annual_vacation
	    <set >
	      <if test="annualDate != null" >
	        ANNUAL_DATE = #{annualDate,jdbcType=BIGINT},
	      </if>
	      <if test="type != null" >
	        TYPE = #{type},
	      </if>
	      <if test="dateType != null" >
	        DATE_TYPE = #{dateType},
	      </if>
	      <if test="subject != null" >
	        SUBJECT = #{subject},
	      </if>
	      <if test="content != null" >
	        CONTENT = #{content},
	      </if>
	      <if test="updateTime != null" >
	        updateTime = #{updateTime},
	      </if>
	      <if test="updateUser != null" >
	        update_user = #{updateUser},
	      </if>
	      <if test="delFlag != null" >
	        del_flag = #{delFlag}
	      </if>
	    </set>
	    where id = #{id}
	 </update>
	<select id="getAnnualDateByYearAndSubject" resultType="java.util.Map">
		SELECT ANNUAL_DATE as day,type as type,subject as subject FROM base_annual_vacation WHERE YEAR = #{year}
		AND SUBJECT = #{vacation} AND DEL_FLAG = 0 AND (TYPE = 3 OR TYPE = 4)  order by ANNUAL_DATE asc;
	</select>
	
	<select id="getAnnualDateByCondition" resultType="java.util.Date" parameterType="com.ule.oa.base.po.AnnualVacation">
    select ANNUAL_DATE from base_annual_vacation
    where del_flag = 0
     <if test="annualDate != null">
    	and ANNUAL_DATE = #{annualDate,jdbcType=DATE}
     </if>	
     <if test="startDate != null">
    	and ANNUAL_DATE &gt;= #{startDate,jdbcType=DATE}
     </if>	
     <if test="endDate != null">
    	and ANNUAL_DATE &lt;=#{endDate,jdbcType=DATE}
     </if>
     <if test="year != null">
  		and DATE_FORMAT(ANNUAL_DATE,'%Y') = #{year,jdbcType=BIGINT}
  	</if>
  	<if test="subject != null">
  		and SUBJECT = #{subject,jdbcType=VARCHAR}
  	</if>
  	<if test="type != null">
  		and type = #{type,jdbcType=BIGINT}
  	</if>
  	<if test="typeList != null and typeList.size > 0">
  			and type in
  			<foreach collection="typeList" item="type" open="(" separator="," close=")">
  				#{type,jdbcType=BIGINT}
  			</foreach>
  	</if>
  	ORDER BY annual_date ASC
  </select>
</mapper>