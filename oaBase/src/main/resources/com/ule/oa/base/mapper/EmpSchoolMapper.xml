<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ule.oa.base.mapper.EmpSchoolMapper" >
  <resultMap id="BaseResultMap" type="com.ule.oa.base.po.EmpSchool" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="employee_id" property="employeeId" jdbcType="BIGINT" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="school" property="school" jdbcType="VARCHAR" />
    <result column="education" property="education" jdbcType="INTEGER" />
    <result column="major" property="major" jdbcType="VARCHAR" />
    <result column="degree" property="degree" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="del_flag" property="delFlag" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="version" property="version" jdbcType="BIGINT"/>
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, employee_id, start_time, end_time, school, education, major, degree, create_time, 
    create_user, update_time, update_user, del_flag, remark,version
  </sql>
  
  <select id="getListByCondition" parameterType="com.ule.oa.base.po.EmpSchool" resultType="com.ule.oa.base.po.EmpSchool">
  	select es.id, es.employee_id, es.start_time, es.end_time, es.school, es.education, es.major, es.degree,es.remark,es.version,
  	sc.display_name as degreeName,(SELECT display_name FROM sys_config where id = es.education and del_flag = 0) educationName
  	from base_emp_school es
  	left join sys_config sc
  	on (es.degree = sc.id and sc.del_flag = 0)
  	where es.del_flag = 0
  	<if test="employeeId != null" >
       and employee_id = #{employeeId,jdbcType=BIGINT}
     </if>
     <if test="startTime != null" >
       and start_time = #{startTime,jdbcType=TIMESTAMP}
     </if>
     <if test="endTime != null" >
       and end_time = #{endTime,jdbcType=TIMESTAMP}
     </if>
     <if test="school != null" >
       and school = #{school,jdbcType=VARCHAR}
     </if>
     <if test="education != null" >
       and education = #{education,jdbcType=INTEGER}
     </if>
     <if test="major != null" >
       and major = #{major,jdbcType=VARCHAR}
     </if>
     <if test="degree != null" >
       and degree = #{degree,jdbcType=INTEGER}
     </if>
     <if test="updateTime != null" >
       and update_time = #{updateTime,jdbcType=TIMESTAMP}
     </if>
     <if test="updateUser != null" >
       and update_user = #{updateUser,jdbcType=VARCHAR}
     </if>
     <if test="delFlag != null" >
       and del_flag = #{delFlag,jdbcType=INTEGER}
     </if>
     <if test="remark != null" >
       and remark = #{remark,jdbcType=VARCHAR}
     </if>
  </select>
  
  <select id="getListByEmployeeId" parameterType="com.ule.oa.base.po.EmpSchool" resultType="com.ule.oa.base.po.EmpSchool">
      select <include refid="Base_Column_List"/> from base_emp_school where 
         del_flag = 0 and employee_id = #{employeeId,jdbcType=BIGINT}  ORDER BY start_time
  </select>
  
  <insert id="save" parameterType="com.ule.oa.base.po.EmpSchool" >
    insert into base_emp_school (employee_id, start_time, 
      end_time, school, education, 
      major, degree, create_time, 
      create_user, update_time, update_user, 
      del_flag, remark)
    values (#{employeeId,jdbcType=BIGINT}, #{startTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{school,jdbcType=VARCHAR}, #{education,jdbcType=INTEGER}, 
      #{major,jdbcType=VARCHAR}, #{degree,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, 
      #{delFlag,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR})
  </insert>
  
  <insert id="saveBatch" parameterType="com.ule.oa.base.po.EmpSchool" >
      insert into base_emp_school (employee_id, start_time, 
      end_time, school, education, 
      major, degree, create_time, 
      create_user, update_time, update_user, 
      del_flag, remark)
      values
      <foreach collection ="list" item="item" index= "index" separator =",">
	      (#{item.employeeId,jdbcType=BIGINT}, #{item.startTime,jdbcType=TIMESTAMP}, 
	       #{item.endTime,jdbcType=TIMESTAMP}, #{item.school,jdbcType=VARCHAR}, #{item.education,jdbcType=INTEGER}, 
	       #{item.major,jdbcType=VARCHAR}, #{item.degree,jdbcType=INTEGER}, #{item.createTime,jdbcType=TIMESTAMP}, 
	       #{item.createUser,jdbcType=VARCHAR}, #{item.updateTime,jdbcType=TIMESTAMP}, #{item.updateUser,jdbcType=VARCHAR}, 
	       #{item.delFlag,jdbcType=INTEGER}, #{item.remark,jdbcType=VARCHAR})
      </foreach >
  </insert>
  
  <update id="deleteBatchNotApply">
    update base_emp_school set del_flag = 1,update_time=#{updateTime,jdbcType=TIMESTAMP}
    ,update_user = #{updateUser,jdbcType=VARCHAR}
    where employee_id = #{employeeId,jdbcType=BIGINT} and id not in
    <foreach collection ="list" item="item" index= "index" open="(" separator="," close=")">
        #{item.id}
    </foreach>
  </update>
  
  <update id="deleteByEmployeeId">
	    update base_emp_school set del_flag = 1,update_time=#{updateTime,jdbcType=TIMESTAMP}
	    ,update_user = #{updateUser,jdbcType=VARCHAR}
	    where del_flag=0 and employee_id = #{employeeId,jdbcType=BIGINT} 
  </update>
 
  <update id="updateById" parameterType="com.ule.oa.base.po.EmpSchool" >
    update base_emp_school
    <set >
      <if test="employeeId != null" >
        employee_id = #{employeeId,jdbcType=BIGINT},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="school != null" >
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="education != null" >
        education = #{education,jdbcType=INTEGER},
      </if>
      <if test="major != null" >
        major = #{major,jdbcType=VARCHAR},
      </if>
      <if test="degree != null" >
        degree = #{degree,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      version = version + 1
    </set>
    where id = #{id,jdbcType=BIGINT} and version = #{version,jdbcType=BIGINT }
  </update>
  
</mapper>