<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ule.oa.base.mapper.EmpPositionMapper" >
  <resultMap id="BaseResultMap" type="com.ule.oa.base.po.EmpPosition" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="employee_id" property="employeeId" jdbcType="BIGINT" />
    <result column="position_id" property="positionId" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="del_flag" property="delFlag" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="version" property="version" jdbcType="BIGINT"/>
  </resultMap>
  <sql id="Base_Column_List" >
    id, employee_id, position_id, create_time, create_user, update_time, update_user, 
    del_flag, remark,version
  </sql>
  
  <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from base_emp_position
    where id = #{id,jdbcType=BIGINT}
  </select>
  
  <select id="getListByCondition" parameterType="com.ule.oa.base.po.EmpPosition" resultMap="BaseResultMap">
  	select <include refid="Base_Column_List"/> from base_emp_position
  	where del_flag = 0
      <if test="employeeId != null" >
        and employee_id = #{employeeId,jdbcType=BIGINT}
      </if>
      <if test="positionId != null" >
        and position_id = #{positionId,jdbcType=BIGINT}
      </if>
      <if test="updateTime != null" >
        and update_time = #{updateTime,jdbcType=TIMESTAMP}
      </if>
      <if test="updateUser != null" >
        and update_user = #{updateUser,jdbcType=VARCHAR}
      </if>
      <if test="remark != null" >
        and remark = #{remark,jdbcType=VARCHAR}
      </if>
  </select>
  
 <select id="getListByPositionName" parameterType="com.ule.oa.base.po.EmpPosition" resultMap="BaseResultMap">
  	select <include refid="Base_Column_List"/> from base_emp_position
  	where del_flag = 0
  	<if test="positionNames != null"> 
	      and position_id in (SELECT id FROM base_position WHERE position_name IN
	        <foreach collection="positionNames" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
	      )
	</if>
  </select>
  
  <insert id="save" parameterType="com.ule.oa.base.po.EmpPosition" >
    insert into base_emp_position
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="employeeId != null" >
        employee_id,
      </if>
      <if test="positionId != null" >
        position_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="employeeId != null" >
        #{employeeId,jdbcType=BIGINT},
      </if>
      <if test="positionId != null" >
        #{positionId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  <update id="updateById" parameterType="com.ule.oa.base.po.EmpPosition" >
    update base_emp_position
    <set >
      <if test="employeeId != null" >
        employee_id = #{employeeId,jdbcType=BIGINT},
      </if>
      <if test="positionId != null" >
        position_id = #{positionId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      version = version + 1
    </set>
    where id = #{id,jdbcType=BIGINT} and version = #{version,jdbcType=BIGINT}
  </update>
  
  <update id="updateByEmployeeId" parameterType="com.ule.oa.base.po.EmpPosition" >
    update base_emp_position
    <set >
      <if test="positionId != null" >
        position_id = #{positionId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where employee_id = #{employeeId,jdbcType=BIGINT}
  </update>
  
</mapper>