<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ule.oa.base.mapper.RunTaskMapper">

	<resultMap id="BaseResultMap" type="com.ule.oa.base.po.RunTask">
		<result column="ID" property="id" jdbcType="BIGINT"/>
		<result column="PROCESS_TYPE" property="processType" jdbcType="BIGINT"/>
		<result column="RE_PROCDEF_CODE" property="reProcdefCode" jdbcType="VARCHAR"/>
		<result column="PROCESS_NAME" property="processName" jdbcType="VARCHAR"/>
		<result column="SUBJECT" property="subject" jdbcType="VARCHAR"/>
		<result column="CREATOR_ID" property="creatorId" jdbcType="BIGINT"/>
		<result column="CREATOR" property="creator" jdbcType="VARCHAR"/>
		<result column="START_TIME" property="startTime" jdbcType="TIMESTAMP"/>
		<result column="END_TIME" property="endTime" jdbcType="TIMESTAMP"/>
		<result column="DURATION" property="duration" jdbcType="BIGINT"/>
		<result column="NODE_MODULE" property="nodeModule" jdbcType="VARCHAR"/>
		<result column="NODE_MODULE_NAME" property="nodeModuleName" jdbcType="VARCHAR"/>
		<result column="NODE_MODULE_TYPE" property="nodeModuleType" jdbcType="BIGINT"/>
		<result column="REDIRECT_URL" property="redirectUrl" jdbcType="VARCHAR"/>
		<result column="ENTITY_ID" property="entityId" jdbcType="VARCHAR" />
		<result column="PROCESS_STATUS" property="processStatus" jdbcType="BIGINT"/>
		<result column="VERSION" property="version" jdbcType="BIGINT"/>
		<result column="DEL_FLAG" property="delFlag" jdbcType="BIGINT"/>
		<result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP"/>
		<result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP"/>
		<result column="CREATE_USER" property="createUser" jdbcType="VARCHAR"/>
		<result column="UPDATE_USER" property="updateUser" jdbcType="VARCHAR"/>
	</resultMap>

	<sql id="Base_Column_List">
		ID,PROCESS_TYPE,RE_PROCDEF_CODE,PROCESS_NAME,SUBJECT,CREATOR_ID,NODE_MODULE_NAME,
		CREATOR,START_TIME,END_TIME,DURATION,NODE_MODULE,NODE_MODULE_TYPE,ENTITY_ID,
		REDIRECT_URL,VERSION,DEL_FLAG,CREATE_TIME,UPDATE_TIME,CREATE_USER,UPDATE_USER,PROCESS_STATUS
	</sql>

	<select id="getById" parameterType="java.lang.Long" resultType="com.ule.oa.base.po.RunTask">
		select
		<include refid="Base_Column_List" />
		from bpm_run_task
		where id = #{id,jdbcType=BIGINT}
	</select>
	
	<select id="getByRuProcdefId" parameterType="java.lang.Long" resultType="com.ule.oa.base.po.RunTask">
		select
		<include refid="Base_Column_List" />
		FROM bpm_run_task
		where id = (SELECT RU_TASK_ID FROM bpm_ru_procdef where id = #{ruProcdefId})
	</select>
	
	<select id="getRunTask" parameterType="com.ule.oa.base.po.RunTask" resultType="com.ule.oa.base.po.RunTask">
		select
		<include refid="Base_Column_List" />
		from bpm_run_task where del_flag = 0
	    <if test="entityId != null and entityId !=''">
	    	and ENTITY_ID = #{entityId,jdbcType=VARCHAR}
	    </if>
	    <if test="reProcdefCode != null and reProcdefCode !=''">
	    	and RE_PROCDEF_CODE = #{reProcdefCode,jdbcType=VARCHAR}
	    </if>
	    ORDER BY create_time DESC
	</select>

	<!-- 分页查询我的协作列表 -->
	<select id="getPageList" parameterType="com.ule.oa.base.po.RunTask" resultType="com.ule.oa.base.po.RunTask">
		select DISTINCT d.name as 'creatorDepart', r.*,h.end_time from bpm_run_task r
		left join bpm_hi_actinst h on r.id = h.ru_task_id
		LEFT JOIN base_emp_depart ed on r.CREATOR_ID = ed.employee_id
		LEFT JOIN base_depart d on ed.depart_id = d.id
		where r.del_flag != ${@com.ule.oa.common.po.CommonPo@STATUS_DELETE}
		<if test="assigneeId != null"> and h.ASSIGNEE_ID = #{assigneeId} </if>
		<if test="processStatus != null"> 
			and r.PROCESS_STATUS = ${@com.ule.oa.base.po.RunTask@PROCESS_STATUS_100}
		</if>
		<if test="processStatus == null"> 
			and h.STATUS in ( 
			${@com.ule.oa.base.po.HiActinst@STATUS_200},
			${@com.ule.oa.base.po.HiActinst@STATUS_300}
			)
		</if>
		<if test="processType != null"> and r.PROCESS_TYPE = #{processType}</if>
		ORDER BY  h.end_time DESC  limit #{offset},#{limit}
	</select>

	<!-- 查询我的协作总记录数 -->
	<select id="getCount" parameterType="com.ule.oa.base.po.RunTask" resultType="java.lang.Integer">
		select count(distinct r.id) from bpm_run_task r
		left join bpm_hi_actinst h on r.id = h.ru_task_id
		where r.del_flag != ${@com.ule.oa.common.po.CommonPo@STATUS_DELETE}
		<if test="assigneeId != null"> and h.ASSIGNEE_ID = #{assigneeId} </if>
		<if test="processStatus != null"> 
			and r.PROCESS_STATUS = ${@com.ule.oa.base.po.RunTask@PROCESS_STATUS_100}
		</if>
		<if test="processStatus == null">
			and (r.PROCESS_STATUS = ${@com.ule.oa.base.po.RunTask@PROCESS_STATUS_200} 
			or r.PROCESS_STATUS = ${@com.ule.oa.base.po.RunTask@PROCESS_STATUS_300}) 
		</if>
		<if test="processType != null"> and r.PROCESS_TYPE = #{processType}</if>
	</select>
	
	<!-- 分页查询我的申请列表 -->
	<select id="getApplyPageList" parameterType="com.ule.oa.base.po.RunTask" resultType="com.ule.oa.base.po.RunTask">
		SELECT distinct r.*, d.name as 'creatorDepart' from bpm_run_task r
		LEFT JOIN bpm_hi_actinst h on r.id = h.ru_task_id
		LEFT JOIN base_emp_depart ed on r.CREATOR_ID = ed.employee_id		
		LEFT JOIN base_depart d on ed.depart_id = d.id
		WHERE r.del_flag != ${@com.ule.oa.common.po.CommonPo@STATUS_DELETE}
		<if test="creatorId != null"> and r.CREATOR_ID = #{creatorId} </if>
		<if test="processStatus != null"> 
			and r.PROCESS_STATUS = #{processStatus}
		</if>
		<if test="processStatuss != null"> 
	      and r.PROCESS_STATUS in 
	      <foreach collection="processStatuss" index="index" item="item" open="(" separator="," close=")">
               #{item}
          </foreach>
	   </if>
		<if test="processType != null"> and r.PROCESS_TYPE = #{processType}</if>
		order by r.id desc limit #{offset},#{limit}
	</select>

	<!-- 全部审批 -->
	<select id="allExaminePageList" parameterType="com.ule.oa.base.po.RunTask" resultType="com.ule.oa.base.po.RunTask">
		select
		r.ID,r.PROCESS_TYPE,r.RE_PROCDEF_CODE,r.PROCESS_NAME,r.SUBJECT,r.CREATOR_ID,r.NODE_MODULE_NAME,
		r.CREATOR,r.START_TIME,r.END_TIME,r.DURATION,r.NODE_MODULE,r.NODE_MODULE_TYPE,r.ENTITY_ID,
		r.REDIRECT_URL,r.VERSION,r.DEL_FLAG,r.CREATE_TIME,r.UPDATE_TIME,r.CREATE_USER,r.UPDATE_USER,r.PROCESS_STATUS
		 from bpm_run_task r
		LEFT JOIN base_employee e on r.CREATOR_ID = e.id 
		LEFT JOIN base_emp_depart ed on ed.employee_id = r.CREATOR_ID
		where r.del_flag != ${@com.ule.oa.common.po.CommonPo@STATUS_DELETE} 
		<if test="cnName != null and cnName != ''">
			and (e.cn_name LIKE CONCAT('%',#{cnName},'%') OR e.code like CONCAT('%',#{cnName},'%'))
		</if>
		<if test="departId != null">
			and ed.depart_id = #{departId}
		</if>
		<if test="createTimeStr != null and createTimeStr !=''"> 
			AND r.CREATE_TIME &gt;= CONCAT(#{createTimeStr},' 00:00:00')
		</if>
		<if test="createTimeStr1 != null and createTimeStr1 !=''"> 
			AND r.CREATE_TIME &lt;= CONCAT(#{createTimeStr1},' 23:59:59')
		</if>
		order by r.id desc limit #{offset},#{limit}
	</select>

	<!-- 查询我的申请总记录数 -->
	<select id="getApplyCount" parameterType="com.ule.oa.base.po.RunTask" resultType="java.lang.Integer">
		select count(distinct r.id) from bpm_run_task r
		left join bpm_hi_actinst h on r.id = h.ru_task_id
		where r.del_flag != ${@com.ule.oa.common.po.CommonPo@STATUS_DELETE}
		<if test="creatorId != null"> and r.CREATOR_ID = #{creatorId} </if>
		<if test="processStatus != null"> 
			and r.PROCESS_STATUS = #{processStatus}
		</if>
		<if test="processType != null"> and r.PROCESS_TYPE = #{processType}</if>
	</select>

	<!-- 保存信息 -->
	<insert id="save" parameterType="com.ule.oa.base.po.RunTask" useGeneratedKeys="true" keyProperty="id">
		insert into bpm_run_task
		(  
			PROCESS_TYPE,
			RE_PROCDEF_CODE,
			PROCESS_NAME,
			SUBJECT,
			CREATOR_ID,
			CREATOR,
			START_TIME,
			END_TIME,
			DURATION,
			NODE_MODULE,
			NODE_MODULE_NAME,
			NODE_MODULE_TYPE,
			ENTITY_ID,
			REDIRECT_URL,
			PROCESS_STATUS,
			VERSION,
			DEL_FLAG,
			CREATE_TIME,
			UPDATE_TIME,
			CREATE_USER,
			UPDATE_USER
		)
		values  ( 
			#{processType,jdbcType=BIGINT},
			#{reProcdefCode,jdbcType=VARCHAR},
			#{processName,jdbcType=VARCHAR},
			#{subject,jdbcType=VARCHAR},
			#{creatorId,jdbcType=BIGINT},
			#{creator,jdbcType=VARCHAR},
			#{startTime,jdbcType=TIMESTAMP},
			#{endTime,jdbcType=TIMESTAMP},
			#{duration,jdbcType=BIGINT},
			#{nodeModule,jdbcType=VARCHAR},
			#{nodeModuleName,jdbcType=VARCHAR},
			#{nodeModuleType,jdbcType=BIGINT},
			#{entityId,jdbcType=VARCHAR},
			#{redirectUrl,jdbcType=VARCHAR},
			#{processStatus,jdbcType=BIGINT},
			1,
			#{delFlag,jdbcType=BIGINT},
			#{createTime,jdbcType=TIMESTAMP},
			#{updateTime,jdbcType=TIMESTAMP},
			#{createUser,jdbcType=VARCHAR},
			#{updateUser,jdbcType=VARCHAR}
		)
	</insert>
	<!-- 批量信息 -->
	<insert id="batchSave" parameterType="java.util.List" >
   		insert into bpm_run_task 
   		(       
			PROCESS_TYPE,
			RE_PROCDEF_CODE,
			PROCESS_NAME,
			SUBJECT,
			CREATOR_ID,
			CREATOR,
			START_TIME,
			END_TIME,
			DURATION,
			NODE_MODULE,
			NODE_MODULE_NAME,
			NODE_MODULE_TYPE,
			ENTITY_ID,
			REDIRECT_URL,
			PROCESS_STATUS,
			VERSION,
			DEL_FLAG,
			CREATE_TIME,
			UPDATE_TIME,
			CREATE_USER,
			UPDATE_USER
	    )
        select T.* FROM (
      	<foreach collection="list" item="item" index="index" separator="UNION">
			SELECT
				#{item.processType,jdbcType=BIGINT} as PROCESS_TYPE,
				#{item.reProcdefCode,jdbcType=VARCHAR} as RE_PROCDEF_CODE,
				#{item.processName,jdbcType=VARCHAR} as PROCESS_NAME,
				#{item.subject,jdbcType=VARCHAR} as SUBJECT,
				#{item.creatorId,jdbcType=BIGINT} as CREATOR_ID,
				#{item.creator,jdbcType=VARCHAR} as CREATOR,
				#{item.startTime,jdbcType=TIMESTAMP} as START_TIME,
				#{item.endTime,jdbcType=TIMESTAMP} as END_TIME,
				#{item.duration,jdbcType=BIGINT} as DURATION,
				#{item.nodeModule,jdbcType=VARCHAR} as NODE_MODULE,
				#{item.nodeModuleName,jdbcType=VARCHAR} as NODE_MODULE_NAME,
				#{item.nodeModuleType,jdbcType=BIGINT} as NODE_MODULE_TYPE,
				#{item.entityId,jdbcType=VARCHAR} AS ENTITY_ID,
				#{item.redirectUrl,jdbcType=VARCHAR} as REDIRECT_URL,
				#{item.processStatus,jdbcType=BIGINT} AS PROCESS_STATUS,
				1 as VERSION,
				#{item.delFlag,jdbcType=BIGINT} as DEL_FLAG,
				#{item.createTime,jdbcType=TIMESTAMP} as CREATE_TIME,
				#{item.updateTime,jdbcType=TIMESTAMP} as UPDATE_TIME,
				#{item.createUser,jdbcType=VARCHAR} as CREATE_USER,
				#{item.updateUser,jdbcType=VARCHAR} as UPDATE_USER
			FROM DUAL
		</foreach>
      ) T
    </insert>

	<!-- 根据主键更新信息 -->
	<update id="updateById" parameterType="com.ule.oa.base.po.RunTask">
		update bpm_run_task
		<set>
			<if test="processType != null">PROCESS_TYPE=#{processType,jdbcType=BIGINT},</if>
			<if test="reProcdefCode != null">RE_PROCDEF_CODE=#{reProcdefCode,jdbcType=VARCHAR},</if>
			<if test="processName != null">PROCESS_NAME=#{processName,jdbcType=VARCHAR},</if>
			<if test="subject != null">SUBJECT=#{subject,jdbcType=VARCHAR},</if>
			<if test="creatorId != null">CREATOR_ID=#{creatorId,jdbcType=BIGINT},</if>
			<if test="creator != null">CREATOR=#{creator,jdbcType=VARCHAR},</if>
			<if test="startTime != null">START_TIME=#{startTime,jdbcType=TIMESTAMP},</if>
			<if test="endTime != null">END_TIME=#{endTime,jdbcType=TIMESTAMP},</if>
			<if test="duration != null">DURATION=#{duration,jdbcType=BIGINT},</if>
			<if test="nodeModule != null">NODE_MODULE=#{nodeModule,jdbcType=VARCHAR},</if>
			<if test="nodeModuleName != null">NODE_MODULE_NAME=#{nodeModuleName,jdbcType=VARCHAR},</if>
			<if test="nodeModuleType != null">NODE_MODULE_TYPE=#{nodeModuleType,jdbcType=BIGINT},</if>
			<if test="redirectUrl != null">REDIRECT_URL=#{redirectUrl,jdbcType=VARCHAR},</if>
			<if test="entityId != null">ENTITY_ID = #{entityId,jdbcType=VARCHAR},</if>
			<if test="version != null">VERSION=#{version,jdbcType=BIGINT},</if>
			<if test="processStatus != null">PROCESS_STATUS = #{processStatus,jdbcType=BIGINT},</if>
			<if test="delFlag != null">DEL_FLAG=#{delFlag,jdbcType=BIGINT},</if>
			<if test="createTime != null">CREATE_TIME=#{createTime,jdbcType=TIMESTAMP},</if>
			<if test="updateTime != null">UPDATE_TIME=#{updateTime,jdbcType=TIMESTAMP},</if>
			<if test="createUser != null">CREATE_USER=#{createUser,jdbcType=VARCHAR},</if>
			<if test="updateUser != null">UPDATE_USER=#{updateUser,jdbcType=VARCHAR},</if>
	    </set>
		where id = #{id,jdbcType=BIGINT}
	</update>
</mapper>